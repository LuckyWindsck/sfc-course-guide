version: '3.2'

services:
  postgresql:
    image: postgres:9.5.20
    volumes:
      - type: bind
        source: ../configs/postgresql/postgresql.conf
        target: /etc/postgresql/postgresql.conf
        read_only: true
      - ../database/postgresql/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - elk
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql/postgresql.conf"
    restart: always

  elasticsearch:
    build:
      context: ../
      dockerfile: ./build/package/elasticsearch.Dockerfile
      args:
        - ELK_VERSION
    volumes:
      - type: bind
        source: ../configs/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk
    environment:
      - ES_JAVA_OPTS
      - ELASTIC_PASSWORD
    restart: always

  kibana:
    build:
      context: ../
      dockerfile: ./build/package/kibana.Dockerfile
      args:
        - ELK_VERSION
    volumes:
      - type: bind
        source: ../configs/kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    environment:
      - KIBANA_USER
      - KIBANA_PASSWORD
    depends_on:
      - elasticsearch
    restart: always

  server:
    build:
      context: ../
      dockerfile: ./build/package/server.Dockerfile
      args:
        - GO_VERSION
    volumes: 
      - ..:/workdir
    ports:
      - "8000:8000"
    networks:
      - elk
    environment:
      - DB_HOST
      - DB_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    depends_on:
      - elasticsearch
    restart: always

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
